{
    "contents" : "library(ggplot2)\nlibrary(Cairo)   # For nicer ggplot2 output when deployed on Linux\n\n# We'll use a subset of the mtcars data set, with fewer columns\n# so that it prints nicely\nmtcars2 <- mtcars[, c(\"mpg\", \"cyl\", \"disp\", \"hp\", \"wt\", \"am\", \"gear\")]\ndata(USArrests)\n\nui <- fluidPage(\n  fluidRow(\n    column(width = 4,\n      plotOutput(\"plot1\", height = 300,\n        # Equivalent to: click = clickOpts(id = \"plot_click\")\n        click = \"plot1_click\",\n        brush = brushOpts(\n          id = \"plot1_brush\"\n        )\n      )\n    )\n  ),\n  fluidRow(\n    column(width = 6,\n      h4(\"Points near click\"),\n      verbatimTextOutput(\"click_info\")\n    ),\n    column(width = 6,\n      h4(\"Brushed points\"),\n      verbatimTextOutput(\"brush_info\")\n    )\n  ),\n  fluidRow(\n    column(width = 4,\n           plotOutput(\"plot2\", height = 300)\n           )\n    )\n  )\n\n\nserver <- function(input, output) {\n  output$plot1 <- renderPlot({\n    ggplot(mtcars2, aes(wt, mpg)) + geom_point()\n    #ggplot(USArrests, aes(Murder, Assault)) + geom_point()\n    #plot1 <- plot(prcomp(USArrests,scale=TRUE), type = 'l')\n  })\n  \n  \n\n  output$click_info <- renderPrint({\n    # Because it's a ggplot2, we don't need to supply xvar or yvar; if this\n    # were a base graphics plot, we'd need those.\n    nearPoints(mtcars2, input$plot1_click, addDist = TRUE)\n  })\n\n  output$brush_info <- renderPrint({\n    brushedPoints(mtcars2, input$plot1_brush)\n  })\n}\n\nshinyApp(ui, server)\n",
    "created" : 1435226853714.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3750806148",
    "id" : "D9159D50",
    "lastKnownWriteTime" : 1442500663,
    "path" : "C:/Users/Jakob/shiny/Tests/shiny-examples-master/104-plot-interaction-select/app.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_source"
}