{
    "contents" : "tryCatch({library(shiny)}, error = function(cond){return(NULL)})\nlibrary(ggplot2)\n#require(rCharts)\n\nshinyUI(navbarPage(\"i-CoDa\",\n    tabPanel(\"StartPage\",\n        HTML('\n            <h1> i-CoDa</h1>\n            <br/>\n            <h5>\n                Welcome to <span class=\"capital\">i</span>(nteractive) <span class=\"capital\"> - Co</span>(mpositional) <span class=\"capital\"> Da</span>(ta),\n                 an userfriendly inerface for compositioal data analysis. <it>i-Coda</it> is the result of combining <i>R</i> with <i>JavaScript, JQuery, HTML and\n                 CSS.</i>\n                 <br/>\n                 In order the use all features, that are provided by <i>i-Coda</i>, you need to have installed the following R-libraries:\n                 <i>\n                 <ul>\n                    <li>shiny</li>\n                    <li>mvoutlier</li>\n                    <li>robCompositions</li>\n                    <li>VIM</li>\n                    <li>StatDA</li>\n                    <li>robustbase</li>\n                    <li>MASS</li>\n                    <li>mclust</li>\n                 </ul>\n                 </i>\n                 <br/>\n                 <br/>\n                 <u><b>Features</b><br/><br/>\n                 <b>I Data</b> <br/>\n                 I.1 Data Import <br/></u>\n                 The first feature you would use, is \"data import\". <i>i-CoDa</i> gives you the possibility to import files (.csv and .RData),\n                 but also you can import a data set, directly from an installed R-package. <br>\n                 <u>I.1.1 CSV-File</u> <br/>\n                 When importign csv-files, you can either import a\n                 standard file or you can import an extended  csv-file. <br/><br/> <b>Example:</b><br/>\n                <img class=\"screenshots\" src=\"screenshots/1.png\"/> <br/> As we can see, this csv-file has an extra column, that contains information about the data. For example\n                the data inserted on the row with <i>\"LDL\"</i> will be used for imputation.\n                <br/><br/>\n                After choosing the desired file, you will see following screen: <br/>\n                <img class=\"screenshots\" src=\"screenshots/2.png\"/>\n                <br/><br/>\n                This is where you can define the upload-options. The <i>preview</i>-button shows you, how your data will be imported with\n                the current options. <br>\n                <img class=\"screenshots\" src=\"screenshots/3.png\" /> <br/><br/>\n\n                <u>I.1.2 RData-File</u> <br>\n                When importing a <i>RData</i>-file, there is not much to do. After choosing the file, that will be uploaded, you only have to\n                choose the name, under which the file will be imported. <br/>\n                <img class=\"screenshots\" src=\"screenshots/4.png\" /> <br/><br/>\n\n                <u>I.1.3 R-Packages</u><br>\n                When importing a data-set from a r-package, the first thing to do, you is choosing the desired package. <br>\n                <img class=\"screenshots\" src=\"screenshots/5.png\" /> <br/><br/>\n                Next step is, choosing the data-set from the chosen package. (in the example I chosed package \"car\") <br>\n                <img class=\"screenshots\" src=\"screenshots/5.png\" /> <br/><br/>\n                And than, you must chose a name for the data set or use the default one. (just like in importing RData-Files)\n                <br/><br/>\n                The file step of importing a data set, is the same for all kind of imports. When reaching the final step, you will see a dialog similar to this one: <br/>\n                <img class=\"screenshots\" src=\"screenshots/7.png\" /> <br/><br/>\n                <br/>\n                On the first column you will se the names of all variables available in the chosen data, while on the second column you will see their type.\n                There are 4 possible types to use:\n                <ul>\n                    <li>character</li>\n                    <li>numeric</li>\n                    <li>factor</li>\n                    <li>logical</li>\n                </ul>\n\n\n            </h5>\n        ')\n    ),\n    navbarMenu(\"Data\",\n    tabPanel(\"Inspect Data\",\n    HTML(\n        ' <div class=\"selectorDiv\">Select Data </br> <select id=\"dataSelector\" class=\"btn\" onchange=\"selectedDataSet(value)\"></select></div>\n        <div class=\"selectorDiv\">Select Variable Group </br> <select id=\"variableGroupSelector\" class=\"btn\" onchange=\"selectedVariableGroup(selectedOptions)\"></select></div>\n        <div class=\"selectorDiv\">Select Subset </br> <select id=\"subsetSelector\" class=\"btn\" onchange=\"selectedSubset(selectedOptions)\"></select></div> <br><br><br><br>\n        <button type=\"button\" class=\"btn tableinput-settings\" id=\"settings\" style=\"margin-bottom:15px; width:70px;\">\n            <i class=\"icon-cog\"></i>\n        </button>\n        <table id=\"dataTable\" class=\"table table-bordered table-condensed\" style=\"text-align:center;\"></table>'\n    )),\n    tabPanel(\"Import Data\",\n        wellPanel(\n            fileInput(\"uploadCSVFile\", \"Choose CSV File\",\n                accept = c(\"text/csv\", \"text/comma-separated-values,text/plain\", \".csv\")\n             ),\n\n             fileInput(\"uploadRData\", \"Choose RData File\",\n                accept = c(\"text/RData\", \"text/plain\", \".RData\")\n             )\n        ),\n\n        HTML(\n            '<div class=\"well\">\n            <input type=\"button\" class=\"btn\" id=\"import from R\" value=\"Import from R\" onclick=\"importDataFromR()\"/>\n            </div>'\n        ))\n#        tabPanel(\"Export Data\",\n#            wellPanel(\n#                HTML('\n#                    <button type=\"button\" class=\"btn\" id=\"saveCSV\" style=\"margin-bottom:15px; width:150px\">Save .CSV</button>\n#                    <br>\n#                    <button type=\"button\" class=\"btn\" id=\"saveRData\" style=\"margin-bottom:15px; width:150px\">Save .RData</button>\n#\n#                ')\n#            )\n#        )\n        ),\n    navbarMenu('Data Manipulation',\n    tabPanel('Missing Values',\n        HTML('<div class = \"well workingWell\", id = \"missingValuesWell\"></div>\n            <div class = \"well workingWell\", id = \"nasWell\"></div>\n        ')\n    ),\n    tabPanel('Detection Limit',\n         HTML('<div class = \"well workingWell\", id = \"detectionLimitWell\"></div>\n               <div class = \"well workingWell\", id = \"infoWell\", style = \"display:none\"></div>\n         ')\n    ),\n    tabPanel('Transformation',\n        HTML('<div id = \"transformationsDiv\">\n            <div class = \"well\", id = \"transformationsWell\", style = \"float:left\"></div>\n             <div class = \"well\", id = \"transformationVariablesDiv\",  style=\"float:left; margin-left:15px; display:none; width: 280px;\"></div>\n             </div>'\n        )\n    ),\n    tabPanel('Define Variables Group',\n        HTML('\n            <div class = \"well workingWell\", id = \"defineVariablesGroupWell\"></div>\n        ')\n    ),\n    tabPanel('Define Observations Group',\n        HTML('\n            <div class = \"well workingWell\", id = \"defineObservationsGroupWell\"></div>\n        ')\n    )),\n    navbarMenu('Statistical Methods',\n        tabPanel('Principal Component Analysis',\n            HTML('\n                <div class=\"well workingWell\", id=\"pcaWell\"></div>\n\t\t\t\t\n            '),\n            fluidRow(\n              column(width = 6,\n                plotOutput(\"pca.BiPlot\",width = \"400px\", height = \"400px\",\n                           click = \"pca.Plot_click\",\n                           brush = brushOpts(\n                             id = \"pca.Plot_brush\"\n                           ))),\n              column(width = 6,\n                plotOutput(\"pca.BiPlotNoInteraction\",width = \"400px\", height = \"400px\"\n                           ))\n            ),\n            downloadButton('pcaDownloadScors', 'Download Scors'),\n            downloadButton('pcaDownloadLoadings', 'Download Loadings'),\n            downloadButton('pcaDownloadFilteredData', 'Download filtered Data'),\n            \n            fluidRow(\n              column(width = 12, h4(\"Points near click\"),\n                     dataTableOutput(\"pca.click_info\")\n              ),\n              column(width = 12, h4(\"Brushed points\"),\n                     dataTableOutput(\"pca.brush_info\")\n              )\n            ),\n            plotOutput(\"pca.ScreePlot\",height = \"400px\"),\n            HTML('\n                <pre id=\"pca.Summary\" class = \"shiny-text-output\"></pre>\n                 '),\n            h4(\"Loadings\"),\n            dataTableOutput(\"pca.Loadings\")\n        ),\n        \n        \n        tabPanel('Factor Analysis',\n            HTML('\n                <div class=\"well workingWell\" id=\"pfaWell\"></div>\n            '),\n            \n            \n            fluidRow(\n              column(width = 6,\n                     plotOutput(\"pfa.BiPlot\",width = \"400px\", height = \"400px\",\n                                click = \"pfa.Plot_click\",\n                                brush = brushOpts(\n                                  id = \"pfa.Plot_brush\"\n                                ))),\n              column(width = 6,\n                     plotOutput(\"pfa.BiPlotNoInteraction\",width = \"400px\", height = \"400px\"\n                     ))\n            ),\n            downloadButton('downloadScors', 'Download Scors'),\n            downloadButton('pfaDownloadLoadings', 'Download Loadings'),\n            downloadButton('downloadFilteredData', 'Download filtered Data'),\n            fluidRow(\n              column(width = 12, h4(\"Points near click\"),\n                     #verbatimTextOutput(\"click_info\")\n                     dataTableOutput(\"pfa.click_info\")\n              ),\n              column(width = 12, h4(\"Brushed points\"),\n                     #verbatimTextOutput(\"brush_info\")\n                     dataTableOutput(\"pfa.brush_info\")\n              )\n            ),\n            plotOutput(\"pfa.Loadplot\"),\n            HTML('\n                <pre id=\"pfa.Loadings\" class = \"shiny-text-output\"></pre>\n                 ')\n        ),\n        \n        \n        tabPanel('Discriminant Analysis',\n            HTML('\n                <div class=\"well workingWell\", id=\"daWell\"></div>\n            '),\n            \n            plotOutput(\"da.Plot\", width = \"400px\", height = \"400px\",\n                         # Equivalent to: click = clickOpts(id = \"plot_click\")\n                         click = \"da.Plot_click\",\n                         brush = brushOpts(\n                           id = \"da.Plot_brush\"\n                         )),\n\n            downloadButton('daDownloadScors', 'Download Scors'),\n            downloadButton('daDownloadLoadings', 'Download Loadings'),\n            downloadButton('daDownloadPredict', 'Download predicted Data'),\n            fluidRow(\n              column(width = 12, h4(\"Points near click\"),\n                     #verbatimTextOutput(\"click_info\")\n                     dataTableOutput(\"da.click_info\")\n              ),\n              column(width = 12, h4(\"Brushed points\"),\n                     #verbatimTextOutput(\"brush_info\")\n                     dataTableOutput(\"da.brush_info\")\n              )\n            ),\n            HTML('\n                <pre id=\"da.print\" class = \"shiny-text-output\"></pre>\n                \n            ')\n        ),\n        \n        \n        tabPanel('Cluster',\n            HTML('\n                <div class=\"well workingWell\" id=\"clustWell\"></div>\n            '),\n            \n            plotOutput(\"clust.Plot\", width = \"400px\", height = \"400px\",\n                       # Equivalent to: click = clickOpts(id = \"plot_click\")\n                       click = \"clust.Plot_click\",\n                       brush = brushOpts(\n                         id = \"clust.Plot_brush\"\n                       )),\n            #HTML('\n            #    <div id=\"clustChooseCluster\"></div>\n            #'),\n            #downloadButton('clustDownloadCluster', 'Download Cluster'),\n            downloadButton('clustDownloadFilteredData', 'Download filtered Data'),\n            fluidRow(\n              column(width = 12, h4(\"Points near click\"),\n                     #verbatimTextOutput(\"click_info\")\n                     dataTableOutput(\"clust.click_info\")\n              ),\n              column(width = 12, h4(\"Brushed points\"),\n                     #verbatimTextOutput(\"brush_info\")\n                     dataTableOutput(\"clust.brush_info\")\n              )\n              ),\n            plotOutput(\"clust.Dendrogram\"),\n            plotOutput(\"clust.BicPlot\", width = \"400px\", height = \"400px\"),\n            HTML('\n                <pre id=\"clust.OptimalCluster\" class = \"shiny-text-output\"></pre>\n                <pre id=\"clust.ClusterVector\" class = \"shiny-text-output\"></pre>\n            ')\n        ),\n        \n        \n        tabPanel('Regression',\n            HTML('\n                <div class=\"well workingWell\" id=\"regressionWell\"></div>\n            '), \n            plotOutput(\"regression.Plot\", width = \"400px\", height = \"400px\",\n                       # Equivalent to: click = clickOpts(id = \"plot_click\")\n                       click = \"regression.Plot_click\",\n                       brush = brushOpts(\n                         id = \"regression.Plot_brush\"\n                       )),\n            downloadButton('regressionDownloadFittedValues', 'Download Fitted Values'),\n            downloadButton('regressionDownloadResiduals', 'Download Residuals'),\n          fluidRow(\n             column(width = 12,\n                    h4(\"Points near click\"),\n                    #verbatimTextOutput(\"click_info\")\n                    dataTableOutput(\"click_info\")\n             ),\n             column(width = 12,\n                    h4(\"Brushed points\"),\n                    #verbatimTextOutput(\"brush_info\")\n                    dataTableOutput(\"brush_info\")\n             )\n           ),\n           HTML('\n                <pre id=\"render.tes\" class = \"shiny-text-output\"></pre>\n                \n            '),\n          plotOutput(\"regression.diagnostic1\"),\n          plotOutput(\"regression.diagnostic2\"),\n          plotOutput(\"regression.diagnostic3\"),\n          plotOutput(\"regression.diagnostic4\"),\n          plotOutput(\"regression.diagnostic5\")\n            \n        ),\n        \n        \n        tabPanel('Outlier Detection',\n            HTML('\n                <div class=\"well workingWell\" id=\"outlierWell\"></div>\n            ')\n        )\n    ),\n#    navbarMenu('Tests'\n#    ),\n    tabPanel(\"Plot\",\n         HTML('\n            <div class=\"completeContainer\" id=\"completeContainer0\">\n                <div class=\"well plotContainer\" id = \"plotContainer0\">\n                    <img id=\"plus\" src=\"plus.png\" onclick=\"createPlotDialog()\"/>\n                </div>\n                <div class=\"minus\" id = \"0\"  onclick=\"deletePlot(this.id)\">\n                    <i class=\"icon-minus-sign\" display=\"none\"></i>\n                </div>\n                <div class=\"plus\" id = \"plus0\" onclick=\"createSubsetNameFieldFromPoints(0)\">\n                    <i class=\"icon-plus-sign\" display=\"none\"></i>\n                </div>\n            </div>\n         ')\n    ),\n\n    # importing the needed script and css files\n          tags$head(\n              tags$link(rel=\"stylesheet\", type=\"text/css\",href=\"style.css\"),\n              tags$link(rel=\"icon\", type=\"image/x-icon\", href=\"icon.ico\"),\n              tags$script(type = \"text/javascript\", src = \"app.js\"),\n              tags$script(type = \"text/javascript\", src = \"busy.js\"),\n              tags$script(type = \"text/javascript\", src = \"Highcharts-4.0.3/js/highcharts.js\"),\n              tags$script(type = \"text/javascript\", src = \"Highcharts-4.0.3/js/highcharts-3d.js\"),\n              tags$script(type = \"text/javascript\", src = \"Highcharts-4.0.3/js/highcharts-more.js\"),\n              tags$script(type = \"text/javascript\", src = \"Highcharts-4.0.3/js/modules/exporting.js\")\n              )\n))\n",
    "created" : 1442069646267.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4274669711",
    "id" : "41DE6259",
    "lastKnownWriteTime" : 1447098808,
    "path" : "C:/Users/Jakob/shiny/r-shiny_v1.1/shiny/ui.R",
    "project_path" : "shiny/ui.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}