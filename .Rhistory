}
n<-10
u<-matrix(0,n,6)
uopt<-matrix(0,n,6)
u[,1]<-100
u[,4]<-200
uopt[,1]<-ecoopt(c(100,200))[1]
uopt[,4]<-ecoopt(c(100,200))[2]
View(uopt)
View(u)
ecoopt(c(100,200))
r<-matrix(rnorm(4*n),n,4)
mu<-c(0.15,0.15,0.1,0.1)
sum(u[,2])
u<-matrix(0,2,3)
uopt<-matrix(0,2,3)
u[,1]<-c(100,200)
uopt[,1]<-ecoopt(c(100,200))
r<-rnorm(4)
mu<-c(0.15,0.15,0.1,0.1)
Sig<-matrix(0,4,4)
Sig[1,1]<-Sig[2,2]<-0.25^2
Sig[3,3]<-Sig[4,4]<-0.2^2
Sig[1,3]<-Sig[2,4]<-Sig[3,1]<-Sig[4,2]<--0.025
C<-t(chol(Sig))
r1<-mu+C%*%r
u[,2]<-c(uopt[1,1]*(1+r1[1]),uopt[2,1]*(1+r1[3]))
uopt[,2]<-ecoopt(u[,2])
u[,3]<-c(uopt[1,2]*(1+r1[2]),uopt[2,2]*(1+r1[4]))
uopt[,3]<-ecoopt(u[,3])
sum(u[,2])
View(u)
ecoall<-array(0,dim=c(n,8,4))
ecoall[,1,1]<-100
ecoall[,5,1]<-200
ecoall[,1,2]<-ecoopt(c(100,200))[1]
ecoall[,5,2]<-ecoopt(c(100,200))[2]
ecoall[,1,3]<-90
ecoall[,5,3]<-210
ecoall[,1,4]<-90
ecoall[,5,4]<-ecoall[1,1,2]+ecoall[1,5,2]-90
View(ecoall)
View(ecoall[,,4])
ecoall<-array(0,dim=c(n,8,4))
ecoall[,1,1]<-100
ecoall[,5,1]<-200
ecoall[,1,2]<-ecoopt(c(100,200))[1]
ecoall[,5,2]<-ecoopt(c(100,200))[2]
ecoall[,1,3]<-90
ecoall[,5,3]<-210
ecoall[,1,4]<-90
ecoall[,5,4]<-ecoall[1,1,2]+ecoall[1,5,2]-90
#Matrix r von 4. file benötigt
r<-matrix(rnorm(6*n),n,6)
mu<-c(0.15,0.15,0.15,0.1,0.1,0.1)
Sig<-matrix(0.025,6,6)
Sig[1,1]<-Sig[2,2]<-Sig[3,3]<-0.25^2
Sig[4,4]<-Sig[5,5]<-Sig[6,6]<-0.2^2
View(Sig)
Sig<-matrix(0,4,4)
Sig[1,1]<-Sig[2,2]<-0.25^2
Sig[3,3]<-Sig[4,4]<-0.2^2
Sig[1,3]<-Sig[2,4]<-Sig[3,1]<-Sig[4,2]<--0.025
View(Sig)
ecoall<-array(0,dim=c(n,10,4))
ecoall[,1,1]<-100
ecoall[,6,1]<-200
ecoall[,1,2]<-ecoopt(c(100,200))[1]
ecoall[,6,2]<-ecoopt(c(100,200))[2]
ecoall[,1,3]<-90
ecoall[,6,3]<-210
ecoall[,1,4]<-90
ecoall[,6,4]<-ecoall[1,1,2]+ecoall[1,6,2]-90
#Matrix r von 4. file benötigt
#
r<-matrix(rnorm(8*n),n,8)
mu<-c(0.15,0.15,0.15,0.1,0.1,0.1)
Sig<-matrix(0,6,6)
Sig[1,1]<-Sig[2,2]<-Sig[3,3]<-Sig[4,4] <-0.25^2
Sig[5,5]<-Sig[6,6]<-Sig[7,7]<-Sig[8,8]<-0.2^2
Sig[1,5]<-Sig[2,6]<-Sig[3,7]<-Sig[4,8]<-Sig[5,1]<-Sig[6,2]<-Sig[7,3]<-Sig[8,4]<--0.025
C<-t(chol(Sig))
r1<-matrix(0,n,8)
for (i in 1:n) r1[i,]<-mu+C%*%r[i,]
ecoall<-array(0,dim=c(n,10,4))
ecoall[,1,1]<-100
ecoall[,6,1]<-200
ecoall[,1,2]<-ecoopt(c(100,200))[1]
ecoall[,6,2]<-ecoopt(c(100,200))[2]
ecoall[,1,3]<-90
ecoall[,6,3]<-210
ecoall[,1,4]<-90
ecoall[,6,4]<-ecoall[1,1,2]+ecoall[1,6,2]-90
#Matrix r von 4. file benötigt
#
r<-matrix(rnorm(8*n),n,8)
mu<-c(0.15,0.15,0.15,0.1,0.1,0.1)
Sig<-matrix(0,8,8)
Sig[1,1]<-Sig[2,2]<-Sig[3,3]<-Sig[4,4] <-0.25^2
Sig[5,5]<-Sig[6,6]<-Sig[7,7]<-Sig[8,8]<-0.2^2
Sig[1,5]<-Sig[2,6]<-Sig[3,7]<-Sig[4,8]<-Sig[5,1]<-Sig[6,2]<-Sig[7,3]<-Sig[8,4]<--0.025
C<-t(chol(Sig))
r1<-matrix(0,n,8)
for (i in 1:n) r1[i,]<-mu+C%*%r[i,]
r<-matrix(rnorm(8*n),n,8)
mu<-c(0.15,0.15,0.15,0.15,0.1,0.1,0.1,0.1)
Sig<-matrix(0,8,8)
Sig[1,1]<-Sig[2,2]<-Sig[3,3]<-Sig[4,4] <-0.25^2
Sig[5,5]<-Sig[6,6]<-Sig[7,7]<-Sig[8,8]<-0.2^2
Sig[1,5]<-Sig[2,6]<-Sig[3,7]<-Sig[4,8]<-Sig[5,1]<-Sig[6,2]<-Sig[7,3]<-Sig[8,4]<--0.025
C<-t(chol(Sig))
r1<-matrix(0,n,8)
for (i in 1:n) r1[i,]<-mu+C%*%r[i,]
for (i in 1:10) {
#time loop
for (j in 1:4) {
ecoall[i,j+1,1]<-ecoall[i,j,2]*(1+r1[i,j])
ecoall[i,j+6,1]<-ecoall[i,j+6,2]*(1+r1[i,j+4])
ecoall[i,j+6,3]<-ecoall[i,j+6,4]*(1+0.0145+0.02334*ecoall[i,j+6,4]/ecoall[i,j,4])
ecoall[i,j+1,3]<-ecoall[i,j+1,1]+ecoall[i,j+6,1]-ecoall[i,j+6,3]
ecoall[i,c(j+1,j+6),2]<-ecoopt(ecoall[i,c(j+1,j+6),1])
ecoall[i,j+1,4]<-ecoall[i,j+1,3]
ecoall[i,j+6,4]<-ecoall[i,j+1,2]+ecoall[i,j+6,2]-ecoall[i,j+1,4]
}
}
ecoall
for (i in 1:10) {	#observation iteration
for (j in 1:4) { #time iteration for future 4 periods
ecoall[i,j+1,1]<-ecoall[i,j,2]*(1+r1[i,j])		#realized u for A at t = j+1
ecoall[i,j+6,1]<-ecoall[i,j+5,2]*(1+r1[i,j+4])	#realized u for B at t = j+1
#debt in period j+1 (Debt of J + interest payment)
ecoall[i,j+6,3]<-ecoall[i,j+5,4]*(1+0.0145+0.02334*ecoall[i,j+5,4]/ecoall[i,j,4])
#equity in period j+1 ( [assets at t = j+1] - [debt at t = j+1])
ecoall[i,j+1,3]<-ecoall[i,j+1,1]+ecoall[i,j+6,1]-ecoall[i,j+6,3]
#uopt in period j + 1 (considering u in period j + 1)
ecoall[i,c(j+1,j+6),2]<-ecoopt(ecoall[i,c(j+1,j+6),1])
#equity remains the same after optimization
ecoall[i,j+1,4]<-ecoall[i,j+1,3]
#debt after optimization (total investment - equity) at t = j + 1
ecoall[i,j+6,4]<-ecoall[i,j+1,2]+ecoall[i,j+6,2]-ecoall[i,j+1,4]
}
}
ecoall
library(alabama)
install.packages('alabama')
library(alabama)
ecoopt_ext<-function (u0,eq)
{
n<-length(u0)
z<-qnorm(0.99)
Par<-matrix(c(0.15,0.25,0.1,0.2),2,2)
Kor<-matrix(c(1,-0.5,-0.5,1),2,2)
M<-function(x) sum(Par[1,]*x)
sig<-function(x) Par[2,]*x
VaR<-function(x) z*sqrt(sig(x)%*%Kor%*%sig(x))
RORAC<-function(x) -M(x)/(VaR(x)-M(x))*100
#print(sig(u0)%*%Kor%*%sig(u0))
eqcon<-function(x) {
h<-rep(NA,1)
h[1]<--VaR(x)+eq
h}
#minimizing RORAC with the equity constraint
#optimise function (which value should chanche,value which should optimised,function)
#library alabama
u<-auglag(u0,RORAC,hin=eqcon)
return(u$par)
}
ecoall_ext<-array(0,dim=c(n,10,4))	#Array: [U, Uopt, EL, ELopt] each with: n observations and 1 + 4 (future) time steps
ecoall_ext[,1,1]<-100
ecoall_ext[,6,1]<-200
ecoall_ext[,1,2]<-ecoopt_ext(c(100,200))[1]
ecoall_ext[,6,2]<-ecoopt_ext(c(100,200))[2]
ecoall_ext[,1,3]<-90
ecoall_ext[,6,3]<-210
ecoall_ext[,1,4]<-90
ecoall_ext[,6,4]<-ecoall_ext[1,1,2]+ecoall_ext[1,6,2]-90	#debt after optimization at t=1
#Matrix r von 4. file benötigt
#
r<-matrix(rnorm(8*n),n,8)
mu<-c(0.15,0.15,0.15,0.15,0.1,0.1,0.1,0.1)
Sig<-matrix(0,8,8)
Sig[1,1]<-Sig[2,2]<-Sig[3,3]<-Sig[4,4] <-0.25^2		#assign variances of A
Sig[5,5]<-Sig[6,6]<-Sig[7,7]<-Sig[8,8]<-0.2^2		#assign variances of B
Sig[1,5]<-Sig[2,6]<-Sig[3,7]<-Sig[4,8]<-Sig[5,1]<-Sig[6,2]<-Sig[7,3]<-Sig[8,4]<--0.025	#assign covariances between A and B without time diversification.
C<-t(chol(Sig)) #cholesky transformation
r1<-matrix(0,n,8)						#(10,8) simulated return matrix for 10 observations and 4 future periods for 2 segments = 10x(4x2) = 10x8
for (i in 1:n) r1[i,]<-mu+C%*%r[i,]
for (i in 1:10) {	#observation iteration
for (j in 1:4) { #time iteration for future 4 periods
ecoall_ext[i,j+1,1]<-ecoall_ext[i,j,2]*(1+r1[i,j])		#realized u for A at t = j+1
ecoall_ext[i,j+6,1]<-ecoall_ext[i,j+5,2]*(1+r1[i,j+4])	#realized u for B at t = j+1
#debt in period j+1 (Debt of J + interest payment)
ecoall_ext[i,j+6,3]<-ecoall_ext[i,j+5,4]*(1+0.0145+0.02334*ecoall_ext[i,j+5,4]/ecoall_ext[i,j,4])
#equity in period j+1 ( [assets at t = j+1] - [debt at t = j+1])
ecoall_ext[i,j+1,3]<-ecoall_ext[i,j+1,1]+ecoall_ext[i,j+6,1]-ecoall_ext[i,j+6,3]
#uopt in period j + 1 (considering u in period j + 1)
ecoall_ext[i,c(j+1,j+6),2]<-ecoopt_ext(ecoall_ext[i,c(j+1,j+6),1])
#equity remains the same after optimization
ecoall_ext[i,j+1,4]<-ecoall_ext[i,j+1,3]
#debt after optimization (total investment - equity) at t = j + 1
ecoall_ext[i,j+6,4]<-ecoall_ext[i,j+1,2]+ecoall_ext[i,j+6,2]-ecoall_ext[i,j+1,4]
}
}
for (i in 1:10) {	#observation iteration
for (j in 1:4) { #time iteration for future 4 periods
ecoall_ext[i,j+1,1]<-ecoall_ext[i,j,2]*(1+r1[i,j])		#realized u for A at t = j+1
ecoall_ext[i,j+6,1]<-ecoall_ext[i,j+5,2]*(1+r1[i,j+4])	#realized u for B at t = j+1
#debt in period j+1 (Debt of J + interest payment)
ecoall_ext[i,j+6,3]<-ecoall_ext[i,j+5,4]*(1+0.0145+0.02334*ecoall_ext[i,j+5,4]/ecoall_ext[i,j,4])
#equity in period j+1 ( [assets at t = j+1] - [debt at t = j+1])
ecoall_ext[i,j+1,3]<-ecoall_ext[i,j+1,1]+ecoall_ext[i,j+6,1]-ecoall_ext[i,j+6,3]
#uopt in period j + 1 (considering u in period j + 1)
ecoall_ext[i,c(j+1,j+6),2]<-ecoopt_ext(ecoall_ext[i,c(j+1,j+6),1],ecoall_ext[i,j+1,3])
#equity remains the same after optimization
ecoall_ext[i,j+1,4]<-ecoall_ext[i,j+1,3]
#debt after optimization (total investment - equity) at t = j + 1
ecoall_ext[i,j+6,4]<-ecoall_ext[i,j+1,2]+ecoall_ext[i,j+6,2]-ecoall_ext[i,j+1,4]
}
}
for (i in 1:10) {	#observation iteration
for (j in 1:4) { #time iteration for future 4 periods
ecoall_ext[i,j+1,1]<-ecoall_ext[i,j,2]*(1+r1[i,j])		#realized u for A at t = j+1
ecoall_ext[i,j+6,1]<-ecoall_ext[i,j+5,2]*(1+r1[i,j+4])	#realized u for B at t = j+1
#debt in period j+1 (Debt of J + interest payment)
ecoall_ext[i,j+6,3]<-ecoall_ext[i,j+5,4]*(1+0.0145+0.02334*ecoall_ext[i,j+5,4]/ecoall_ext[i,j,4])
#equity in period j+1 ( [assets at t = j+1] - [debt at t = j+1])
ecoall_ext[i,j+1,3]<-ecoall_ext[i,j+1,1]+ecoall_ext[i,j+6,1]-ecoall_ext[i,j+6,3]
#uopt in period j + 1 (considering u in period j + 1)
ecoall_ext[i,c(j+1,j+6),2]<-ecoopt_ext(ecoall_ext[i,c(j+1,j+6),1],ecoall_ext[i,j+1,3])
#equity remains the same after optimization
ecoall_ext[i,j+1,4]<-ecoall_ext[i,j+1,3]
#debt after optimization (total investment - equity) at t = j + 1
ecoall_ext[i,j+6,4]<-ecoall_ext[i,j+1,2]+ecoall_ext[i,j+6,2]-ecoall_ext[i,j+1,4]
}
}
ecoall_ext
ecoall_ext<-array(0,dim=c(n,10,4))	#Array: [U, Uopt, EL, ELopt] each with: n observations and 1 + 4 (future) time steps
ecoall_ext[,1,1]<-100
ecoall_ext[,6,1]<-200
ecoall_ext[,1,2]<-ecoopt_ext(c(100,200),90)[1]
ecoall_ext[,6,2]<-ecoopt_ext(c(100,200),90)[2]
ecoall_ext[,1,3]<-90
ecoall_ext[,6,3]<-210
ecoall_ext[,1,4]<-90
ecoall_ext[,6,4]<-ecoall_ext[1,1,2]+ecoall_ext[1,6,2]-90	#debt after optimization at t=1
#Matrix r von 4. file benötigt
#
r<-matrix(rnorm(8*n),n,8)
mu<-c(0.15,0.15,0.15,0.15,0.1,0.1,0.1,0.1)
Sig<-matrix(0,8,8)
Sig[1,1]<-Sig[2,2]<-Sig[3,3]<-Sig[4,4] <-0.25^2		#assign variances of A
Sig[5,5]<-Sig[6,6]<-Sig[7,7]<-Sig[8,8]<-0.2^2		#assign variances of B
Sig[1,5]<-Sig[2,6]<-Sig[3,7]<-Sig[4,8]<-Sig[5,1]<-Sig[6,2]<-Sig[7,3]<-Sig[8,4]<--0.025	#assign covariances between A and B without time diversification.
C<-t(chol(Sig)) #cholesky transformation
r1<-matrix(0,n,8)						#(10,8) simulated return matrix for 10 observations and 4 future periods for 2 segments = 10x(4x2) = 10x8
for (i in 1:n) r1[i,]<-mu+C%*%r[i,]
for (i in 1:10) {	#observation iteration
for (j in 1:4) { #time iteration for future 4 periods
ecoall_ext[i,j+1,1]<-ecoall_ext[i,j,2]*(1+r1[i,j])		#realized u for A at t = j+1
ecoall_ext[i,j+6,1]<-ecoall_ext[i,j+5,2]*(1+r1[i,j+4])	#realized u for B at t = j+1
#debt in period j+1 (Debt of J + interest payment)
ecoall_ext[i,j+6,3]<-ecoall_ext[i,j+5,4]*(1+0.0145+0.02334*ecoall_ext[i,j+5,4]/ecoall_ext[i,j,4])
#equity in period j+1 ( [assets at t = j+1] - [debt at t = j+1])
ecoall_ext[i,j+1,3]<-ecoall_ext[i,j+1,1]+ecoall_ext[i,j+6,1]-ecoall_ext[i,j+6,3]
#uopt in period j + 1 (considering u in period j + 1)
ecoall_ext[i,c(j+1,j+6),2]<-ecoopt_ext(ecoall_ext[i,c(j+1,j+6),1],ecoall_ext[i,j+1,3])
#equity remains the same after optimization
ecoall_ext[i,j+1,4]<-ecoall_ext[i,j+1,3]
#debt after optimization (total investment - equity) at t = j + 1
ecoall_ext[i,j+6,4]<-ecoall_ext[i,j+1,2]+ecoall_ext[i,j+6,2]-ecoall_ext[i,j+1,4]
}
}
ecoall_ext
shiny::runApp('shiny')
View(zz)
shiny::runApp('shiny')
load("C:/Users/Jakob/shiny/r-shiny_v1.1/data/pfa_cut_moss.RData")
wine.fac <- factanal(scale(cut_moss),factors=2,scores='regression',rotation='varimax')
wine.fac$scores
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
######## ##     ## ######## ########   ######  ####  ######  ########
##        ##   ##  ##       ##     ## ##    ##  ##  ##    ## ##
##         ## ##   ##       ##     ## ##        ##  ##       ##
######      ###    ######   ########  ##        ##   ######  ######
##         ## ##   ##       ##   ##   ##        ##        ## ##
##        ##   ##  ##       ##    ##  ##    ##  ##  ##    ## ##
######## ##     ## ######## ##     ##  ######  ####  ######  ########
#######
##     ##
##
#######
##
##     ##
#######
#Hiessl, Perger
#Note: No seed set for random functions yet.
### Optimization Functions ###
library(numDeriv)
ecoopt<-function (u0) 			#exhaustive RORAC optimization without equity constraint
{
n<-length(u0)
z<-qnorm(0.99)
Par<-matrix(c(0.15,0.25,0.1,0.2),2,2)
Kor<-matrix(c(1,-0.5,-0.5,1),2,2)
M<-function(x) sum(Par[1,]*x)
sig<-function(x) Par[2,]*x
VaR<-function(x) z*sqrt(sig(x)%*%Kor%*%sig(x))
RORAC<-function(x) M(x)/(VaR(x)-M(x))
mVaR<-function(x) grad(VaR,x)
lam<-max(eigen(hessian(VaR,rep(1,n)))$values)
eps<-10^-6
ROR<-c(0,RORAC(u0))
u<-u0
while(abs(ROR[1]-ROR[2])>eps) {		#exhaustive optimization search
e<-rep(0,n)
ROR[1]<-RORAC(u)
mVa<-mVaR(u)
for (i in 1:n) {			#optimization step using iRORAC and Theorem 3.6 (see BDW)
e[i]<-(Par[1,i]*(1+ROR[1])-ROR[1]*mVa[i])/(ROR[1]*0.5*lam)
}
u<-u+e*0.5
ROR[2]<-RORAC(u)
}
return(u)
}
library(alabama)
ecoopt_ext<-function (u0,eq)   #exhaustive RORAC optimization without equity constraint
{
n<-length(u0)
z<-qnorm(0.99)
Par<-matrix(c(0.15,0.25,0.1,0.2),2,2)
Kor<-matrix(c(1,-0.5,-0.5,1),2,2)
M<-function(x) sum(Par[1,]*x)
sig<-function(x) Par[2,]*x
VaR<-function(x) z*sqrt(sig(x)%*%Kor%*%sig(x))
RORAC<-function(x) -M(x)/(VaR(x)-M(x))*100
#print(sig(u0)%*%Kor%*%sig(u0))
eqcon<-function(x) {
h<-rep(NA,1)
h[1]<--VaR(x)+eq
h}
#minimizing RORAC with the equity constraint
#optimise function (which value should chanche,value which should optimised,function)
#library alabama
u<-auglag(u0,RORAC,hin=eqcon)
return(u$par)
}
### RORAC oriented portfolio optimization, WITHOUT equity constraint ###
n <- 10	#number of simulations
ecoall<-array(0,dim=c(n,10,4))	#Array: [U, Uopt, EL, ELopt] each with: n observations and 1 + 4 (future) time steps
ecoall[,1,1]<-100
ecoall[,6,1]<-200
ecoall[,1,2]<-ecoopt(c(100,200))[1]
ecoall[,6,2]<-ecoopt(c(100,200))[2]
ecoall[,1,3]<-90
ecoall[,6,3]<-210
ecoall[,1,4]<-90
ecoall[,6,4]<-ecoall[1,1,2]+ecoall[1,6,2]-90	#debt after optimization at t=1
#Simulate future returns
r<-matrix(rnorm(8*n),n,8)
mu<-c(0.15,0.15,0.15,0.15,0.1,0.1,0.1,0.1)
Sig<-matrix(0,8,8)
Sig[1,1]<-Sig[2,2]<-Sig[3,3]<-Sig[4,4] <-0.25^2		#assign variances of A
Sig[5,5]<-Sig[6,6]<-Sig[7,7]<-Sig[8,8]<-0.2^2		#assign variances of B
Sig[1,5]<-Sig[2,6]<-Sig[3,7]<-Sig[4,8]<-Sig[5,1]<-Sig[6,2]<-Sig[7,3]<-Sig[8,4]<--0.025	#assign covariances between A and B without time diversification.
C<-t(chol(Sig)) #cholesky transformation
r1<-matrix(0,n,8)						#(10,8) simulated return matrix for 10 observations and 4 future periods for 2 segments = 10x(4x2) = 10x8
for (i in 1:n) r1[i,]<-mu+C%*%r[i,]
for (i in 1:10) {	#observation iteration
for (j in 1:4) { #time iteration for future 4 periods
ecoall[i,j+1,1]<-ecoall[i,j,2]*(1+r1[i,j])		#realized u for A at t = j+1
ecoall[i,j+6,1]<-ecoall[i,j+5,2]*(1+r1[i,j+4])	#realized u for B at t = j+1
#debt in period j+1 (Debt of J + interest payment)
ecoall[i,j+6,3]<-ecoall[i,j+5,4]*(1+0.0145+0.02334*ecoall[i,j+5,4]/ecoall[i,j,4])
#equity in period j+1 ( [assets at t = j+1] - [debt at t = j+1])
ecoall[i,j+1,3]<-ecoall[i,j+1,1]+ecoall[i,j+6,1]-ecoall[i,j+6,3]
#uopt in period j + 1 (considering u in period j + 1)
ecoall[i,c(j+1,j+6),2]<-ecoopt(ecoall[i,c(j+1,j+6),1])
#equity remains the same after optimization
ecoall[i,j+1,4]<-ecoall[i,j+1,3]
#debt after optimization (total investment - equity) at t = j + 1
ecoall[i,j+6,4]<-ecoall[i,j+1,2]+ecoall[i,j+6,2]-ecoall[i,j+1,4]
}
}
### RORAC oriented portfolio optimization, WITH equity constraint ###
n <- 10	#number of simulations
ecoall_ext<-array(0,dim=c(n,10,4))	#Array: [U, Uopt, EL, ELopt] each with: n observations and 1 + 4 (future) time steps
ecoall_ext[,1,1]<-100
ecoall_ext[,6,1]<-200
ecoall_ext[,1,2]<-ecoopt_ext(c(100,200),90)[1]
ecoall_ext[,6,2]<-ecoopt_ext(c(100,200),90)[2]
ecoall_ext[,1,3]<-90
ecoall_ext[,6,3]<-210
ecoall_ext[,1,4]<-90
ecoall_ext[,6,4]<-ecoall_ext[1,1,2]+ecoall_ext[1,6,2]-90	#debt after optimization at t=1
##Simulate future returns
r<-matrix(rnorm(8*n),n,8)
mu<-c(0.15,0.15,0.15,0.15,0.1,0.1,0.1,0.1)
Sig<-matrix(0,8,8)
Sig[1,1]<-Sig[2,2]<-Sig[3,3]<-Sig[4,4] <-0.25^2		#assign variances of A
Sig[5,5]<-Sig[6,6]<-Sig[7,7]<-Sig[8,8]<-0.2^2		#assign variances of B
Sig[1,5]<-Sig[2,6]<-Sig[3,7]<-Sig[4,8]<-Sig[5,1]<-Sig[6,2]<-Sig[7,3]<-Sig[8,4]<--0.025	#assign covariances between A and B without time diversification.
C<-t(chol(Sig)) #cholesky transformation
r1<-matrix(0,n,8)						#(10,8) simulated return matrix for 10 observations and 4 future periods for 2 segments = 10x(4x2) = 10x8
for (i in 1:n) r1[i,]<-mu+C%*%r[i,]
for (i in 1:10) {	#observation iteration
for (j in 1:4) { #time iteration for future 4 periods
ecoall_ext[i,j+1,1]<-ecoall_ext[i,j,2]*(1+r1[i,j])		#realized u for A at t = j+1
ecoall_ext[i,j+6,1]<-ecoall_ext[i,j+5,2]*(1+r1[i,j+4])	#realized u for B at t = j+1
#debt in period j+1 (Debt of J + interest payment)
ecoall_ext[i,j+6,3]<-ecoall_ext[i,j+5,4]*(1+0.0145+0.02334*ecoall_ext[i,j+5,4]/ecoall_ext[i,j,4])
#equity in period j+1 ( [assets at t = j+1] - [debt at t = j+1])
ecoall_ext[i,j+1,3]<-ecoall_ext[i,j+1,1]+ecoall_ext[i,j+6,1]-ecoall_ext[i,j+6,3]
#uopt in period j + 1 (considering u in period j + 1)
ecoall_ext[i,c(j+1,j+6),2]<-ecoopt_ext(ecoall_ext[i,c(j+1,j+6),1],ecoall_ext[i,j+1,3])
#equity remains the same after optimization
ecoall_ext[i,j+1,4]<-ecoall_ext[i,j+1,3]
#debt after optimization (total investment - equity) at t = j + 1
ecoall_ext[i,j+6,4]<-ecoall_ext[i,j+1,2]+ecoall_ext[i,j+6,2]-ecoall_ext[i,j+1,4]
}
}
#print result
print("--- Ecoall: (WITHOUT equity constraint) ---")
(ecoall)
print("Mean ELopt structure for the next 4 periods. [E1,E2,E3,E4,E5,D1,D2,D3,D4,D5]")
apply(ecoall[,,4],2,mean)
print("Mean simuated EL structure for the next 4 periods. [E1,E2,E3,E4,E5,D1,D2,D3,D4,D5]")
apply(ecoall[,,3],2,mean)
print("Mean Uopt structure for the next 4 periods. [uA1,uA2,uA3,uA4,uA5,uB1,uB2,uB3,uB4,uB5]")
apply(ecoall[,,2],2,mean)
print("Mean simulated U structure for the next 4 periods. [uA1,uA2,uA3,uA4,uA5,uB1,uB2,uB3,uB4,uB5]")
apply(ecoall[,,1],2,mean)
print("--- Ecoall_ext: (WITH equity constraint) ---")
(ecoall_ext)
print("Mean ELopt structure for the next 4 periods. [E1,E2,E3,E4,E5,D1,D2,D3,D4,D5]")
apply(ecoall_ext[,,4],2,mean)
print("Mean simuated EL structure for the next 4 periods. [E1,E2,E3,E4,E5,D1,D2,D3,D4,D5]")
apply(ecoall_ext[,,3],2,mean)
print("Mean Uopt structure for the next 4 periods. [uA1,uA2,uA3,uA4,uA5,uB1,uB2,uB3,uB4,uB5]")
apply(ecoall_ext[,,2],2,mean)
print("Mean simulated U structure for the next 4 periods. [uA1,uA2,uA3,uA4,uA5,uB1,uB2,uB3,uB4,uB5]")
apply(ecoall_ext[,,1],2,mean)
da_diabetes <- read.table("C:/Users/Jakob/shiny/r-shiny_v1.1/data/da_diabetes.RData", quote="\"")
View(da_diabetes)
load("C:/Users/Jakob/Dropbox/Stud/9. Sem (WS2015)/Machine Learning/Übung/Übung 2/da_diabetes.RData")
View(diabetes)
WineData = read.table("http://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-red.csv",
header=TRUE,
sep=";",
fill=FALSE,
strip.white=TRUE)
View(WineData)
iris3[1:25,,1]
View(iris3)
iris3[1:25,,2]
install.packages("class")
library(class)
wineData = read.table("http://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-red.csv",
header=TRUE,
sep=";",
fill=FALSE,
strip.white=TRUE)
#http://artax.karlin.mff.cuni.cz/r-help/library/FNN/html/knn.reg.html
# split data into two subsets: training (70%) and test (30%); set
# a fixed random seed to make results reproducible
set.seed(1234)
ind <- sample(2, nrow(wineData), replace = TRUE, prob = c(0.7, 0.3))
wine.train.data <- wineData[ind == 1, ]
wine.test.data <- wineData[ind == 2, ]
#remove quality as prediction variable from wine.train.data
wine.train.data.cut <- wine.train.data[,-12]
wine.train.classVec <- wine.train.data[12]
wine.test.data.cut <- wine.test.data[,-12]
wine.classVec <- wine.test.data[12]
wine.knn <- knn(wine.train.data.cut, wine.test.data.cut wine.train.classVec, k = 3, prob=TRUE)
wine.knn <- knn(wine.train.data.cut, wine.test.data.cut, wine.train.classVec, k = 3, prob=TRUE)
wine.knn <- knn(wine.train.data.cut, wine.test.data.cut, wine.classVec, k = 3, prob=TRUE)
set.seed(1234)
ind <- sample(2, nrow(wineData), replace = TRUE, prob = c(0.5, 0.5))
wine.train.data <- wineData[ind == 1, ]
wine.test.data <- wineData[ind == 2, ]
#remove quality as prediction variable from wine.train.data
wine.train.data.cut <- wine.train.data[,-12]
wine.train.classVec <- wine.train.data[12]
wine.test.data.cut <- wine.test.data[,-12]
wine.classVec <- wine.test.data[12]
wine.knn <- knn(wine.train.data.cut, wine.test.data.cut, wine.classVec, k = 3, prob=TRUE)
ind <- sample(2, nrow(wineData), replace = TRUE, prob = c(0.7, 0.3))
wine.train.data <- wineData[ind == 1, ]
wine.test.data <- wineData[ind == 2, ]
#remove quality as prediction variable from wine.train.data
wine.train.data.cut <- wine.train.data[,-12]
wine.train.classVec <- factor(wine.train.data[12])
#wine.test.data.cut <- wine.test.data[,-12]
#wine.classVec <- wine.test.data[12]
wine.knn <- knn(wine.train.data.cut, wine.test.data, wine.train.classVec, k = 3, prob=TRUE)
factor(wine.train.data[12])
factor(c(wine.train.data[12])
factor(c(wine.train.data[12]))
wine.train.data[12]
as.factor(wine.train.data[12])
as.factor(as.vector(wine.train.data[12]))
class(wine.train.data[12])
as.matrix(wine.train.data[12])
as.factor(as.matrix(wine.train.data[12]))
wine.knn <- knn(wine.train.data.cut, wine.test.data, as.factor(as.matrix(wine.train.data[12])), k = 3, prob=TRUE)
wine.knn <- knn(wine.train.data.cut, wine.test.data[,-12], as.factor(as.matrix(wine.train.data[12])), k = 3, prob=TRUE)
